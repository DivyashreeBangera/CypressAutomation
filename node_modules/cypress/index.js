"use strict";

const minimist = require('minimist');
const debug = require('debug')('cypress:cli');
const args = minimist(process.argv.slice(2));
const util = require('./lib/util');

// we're being used from the command line
switch (args.exec) {
  case 'install':
    debug('installing Cypress from NPM');
    require('./lib/tasks/install').start({
      force: args.force
    }).catch(util.logErrorExit1);
    break;
  case 'verify':
    // for simple testing in the monorepo
    debug('verifying Cypress');
    require('./lib/tasks/verify').start({
      force: true
    }) // always force verification
    .catch(util.logErrorExit1);
    break;
  default:
    debug('exporting Cypress module interface');
    module.exports = require('./lib/cypress');
}
// ...
/*const path = require("path");
const gmail = require("gmail-tester");

module.exports = (on, config) => {
  // `on` is used to hook into various events Cypress emits
  // `config` is the resolved Cypress config

  // ...

  on("task", {
    "gmail:check": async args => {
      const { from, to, subject } = args;
      const email = await gmail.check_inbox(
        path.resolve(__dirname, "credentials.json"), // credentials.json is inside plugins/ directory.
        path.resolve(__dirname, "gmail_token.json"), // gmail_token.json is inside plugins/ directory.
        subject,
        from,
        to,
        10,                                          // Poll interval (in seconds)
        30                                           // Maximum poll interval (in seconds). If reached, return null, indicating the completion of the task().
      );
      return email;
    }
  })
});*/

